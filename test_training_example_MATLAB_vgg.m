function test_training_example_MATLAB_vgg

% Batch-size
batchSize = 32;
% Number of epcohs to train
epochs = 30;

%To read train/validation data
imds = imageDatastore('C:\Users\Public\Documents\MATLAB\forHackathon\cwt_images\train', 'IncludeSubfolders', true, ...
    'LabelSource', 'foldernames', 'FileExtensions', '.jpg');
aug_imds = augmentedImageDatastore([224 224], imds);
imds_test = imageDatastore('C:\Users\Public\Documents\MATLAB\forHackathon\cwt_images\validation', 'IncludeSubfolders', true, ...
    'LabelSource', 'foldernames', 'FileExtensions', '.jpg');
aug_imds_test = augmentedImageDatastore([224 224], imds_test);

%vgg16
net = vgg16;
layers = net.Layers;
% Data-set has 50 categories
layers(39) = fullyConnectedLayer(2);
layers(40) = softmaxLayer('Name','prob');
layers(end) = classificationLayer('Name','output');

validationFrequency = floor(length(imds.Files)/batchSize);

% Specify training options
opts = trainingOptions('sgdm', ...
    'InitialLearnRate', 0.0004, ...
    'LearnRateSchedule', 'piecewise', ...
    'LearnRateDropFactor', 0.1, ...
    'LearnRateDropPeriod', 20, ...
    'L2Regularization', 0.0001, ...
    'MaxEpochs', epochs, ...
    'MiniBatchSize', batchSize, ...
    'ValidationData', aug_imds_test, ...
    'ValidationFrequency', validationFrequency, ...
    'ValidationPatience', Inf, ...
    'Plots','training-progress', ...
    'Verbose', true, 'ExecutionEnvironment', 'gpu');

%Training
[net, info] = trainNetwork(aug_imds, layers, opts)
